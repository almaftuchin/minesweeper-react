{"version":3,"sources":["components/Cell.jsx","components/Timer.jsx","components/Board.jsx","components/Auth.jsx","components/NavBar.jsx","components/TopPlayers.jsx","App.js","serviceWorker.js","index.js"],"names":["Cell","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props$cell","props","cell","revealed","flagged","mine","val","_this$props","onClick","onContextMenu","className","boom","react_default","a","createElement","getValue","Component","Timer","_this","timer","setInterval","started","clockIn","clearInterval","time","Board","call","newGame","progress","setState","board","initBoard","status","godMode","i","size","concat","toConsumableArray","addMines","cellIndex","j","m","mines","w","width","_loop","index","randomNumber","square","map","includes","minesLoc","addNeighbor","minesLocation","forEach","Math","floor","random","copy","state","handleClick","reveal","fillBoard","_ref","floodFill","sendData","logged","fetch","localStorage","id","name","Date","accessToken","rightClick","e","preventDefault","split","Number","s","cheat","NotificationManager","info","renderBoard","components_Cell","height","Fragment","lib","Row","Col","md","style","color","Button","variant","disabled","components_Timer","Auth","facebookResponse","res","expired","expiresIn","parseInt","clear","NavbarBrand","Nav","facebook_login_render_props_default","appId","autoLoad","callback","render","renderProps","NavBar","Navbar","bg","Brand","alt","src","components_Auth","TopPlayers","data","gotTop","_this2","then","json","top5","score","moment","format","Table","striped","bordered","App","components_NavBar","Container","components_Board","components_TopPlayers","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31f2893a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Cell extends Component {\r\n  getValue() {\r\n    const { revealed, flagged, mine, val } = this.props.cell;\r\n    if (!revealed) return flagged ? '🚩' : null;\r\n    if (mine) return '💣';\r\n    return val ? val : null;\r\n  }\r\n\r\n  render() {\r\n    const { cell, onClick, onContextMenu } = this.props;\r\n    const numClasses = [\r\n      ' one',\r\n      ' two',\r\n      ' three',\r\n      ' four',\r\n      ' five',\r\n      ' six',\r\n      ' seven',\r\n      ' eight'\r\n    ];\r\n    let className =\r\n      'cell' +\r\n      (cell.revealed ? ' revealed' : '') +\r\n      (cell.revealed && cell.val ? numClasses[cell.val - 1] : '') +\r\n      (cell.flagged ? ' flagged' : '') +\r\n      (cell.boom ? ' boom' : '');\r\n    return (\r\n      <div\r\n        onClick={onClick}\r\n        className={className}\r\n        onContextMenu={onContextMenu}\r\n      >\r\n        {this.getValue()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Timer extends Component {\r\n  componentDidMount() {\r\n    this.timer = setInterval(() => {\r\n      if (this.props.started) {\r\n        this.props.clockIn();\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  render() {\r\n    return <div className='clock'>{this.props.time}</div>;\r\n  }\r\n}\r\n\r\nexport default Timer;\r\n","import React, { Component } from 'react';\r\nimport Cell from './Cell.jsx';\r\nimport Timer from './Timer.jsx';\r\nimport { Button, Row, Col } from 'react-bootstrap';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager\r\n} from 'react-notifications';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nexport class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.progress = 0;\r\n    this.height = props.height;\r\n    this.width = props.width;\r\n    this.mines = props.mines;\r\n    this.size = props.height * props.width;\r\n    this.state = {\r\n      board: this.initBoard(),\r\n      status: 'Good luck!',\r\n      started: 0,\r\n      time: '00:00',\r\n      minesLoc: [],\r\n      godMode: 0,\r\n      logged: localStorage.logged\r\n    };\r\n  }\r\n\r\n  fillBoard(index) {\r\n    let board = this.initBoard();\r\n    board = this.addNeighbor(...this.addMines(board, index));\r\n    return board;\r\n  }\r\n\r\n  newGame = () => {\r\n    this.progress = 0;\r\n    this.setState({\r\n      board: this.initBoard(),\r\n      status: 'Good luck!',\r\n      started: 0,\r\n      godMode: 0,\r\n      time: '00:00'\r\n    });\r\n  };\r\n\r\n  // Fill board with nada\r\n  initBoard = () => {\r\n    let board = [];\r\n    for (let i = 0; i < this.size; i++) {\r\n      board = [...board, { mine: 0, revealed: 0, flagged: 0, val: 0, boom: 0 }];\r\n    }\r\n    return board;\r\n  };\r\n\r\n  // Fill board with mines\r\n  addMines = (board, cellIndex) => {\r\n    let i = 0,\r\n      j = [];\r\n    const m = this.mines,\r\n      w = this.width;\r\n    while (i < m) {\r\n      const index = this.randomNumber();\r\n      const square = [-(w + 1), -w, -(w - 1), -1, 0, 1, w - 1, w, w + 1].map(\r\n        val => index + val\r\n      );\r\n      // Because first click is always safe - make sure the square does not include first click's position\r\n      if (!board[index].mine && !square.includes(cellIndex)) {\r\n        board[index].mine = 1;\r\n        j = [...j, index];\r\n        i++;\r\n      }\r\n    }\r\n    this.setState({ minesLoc: j });\r\n    return [board, j];\r\n  };\r\n\r\n  // Fill board with moves\r\n  // Original algorithm: traverse through board from first location to last location then add one for each bomb.\r\n  // New algorithm: map through each bomb and add one to neighbors\r\n  addNeighbor = (board, minesLocation) => {\r\n    const size = this.size;\r\n    const w = this.width;\r\n    minesLocation.forEach(i => {\r\n      // top neighbors\r\n      if (i >= w) {\r\n        // top left\r\n        if (\r\n          i - w - 1 >= 0 &&\r\n          (i - w - 1) % w !== w - 1 &&\r\n          !board[i - w - 1].mine\r\n        )\r\n          board[i - w - 1].val++;\r\n        // top\r\n        if (!board[i - w].mine) board[i - w].val++;\r\n        // top right\r\n        if ((i - w + 1) % w !== 0 && !board[i - w + 1].mine)\r\n          board[i - w + 1].val++;\r\n      }\r\n      // bottom neighbors\r\n      if (i < size - w) {\r\n        // btm left\r\n        if ((i + w - 1) % w !== w - 1 && !board[i + w - 1].mine)\r\n          board[i + w - 1].val++;\r\n        // btm\r\n        if (!board[i + w].mine) board[i + w].val++;\r\n        // btm right\r\n        if ((i + w + 1) % w !== 0 && !board[i + w + 1].mine)\r\n          board[i + w + 1].val++;\r\n      }\r\n      // left\r\n      if (i - 1 >= 0 && (i - 1) % w !== w - 1 && !board[i - 1].mine)\r\n        board[i - 1].val++;\r\n      // right\r\n      if (i + 1 < size && (i + 1) % w !== 0 && !board[i + 1].mine)\r\n        board[i + 1].val++;\r\n    });\r\n    return board;\r\n  };\r\n\r\n  randomNumber = () => Math.floor(Math.random() * this.size);\r\n\r\n  boom = index => {\r\n    let copy = [...this.state.board];\r\n    copy[index].boom = 1;\r\n    copy.forEach(cell => {\r\n      cell.revealed = 1;\r\n    });\r\n    this.setState({\r\n      board: copy,\r\n      status: '😢 You lost 😢',\r\n      started: 0\r\n    });\r\n  };\r\n\r\n  handleClick = (index, props) => {\r\n    if (!this.state.started && !props.revealed) {\r\n      this.setState(\r\n        {\r\n          started: 1,\r\n          board: this.fillBoard(index)\r\n        },\r\n        () => {\r\n          this.reveal(index, props);\r\n        }\r\n      );\r\n    } else {\r\n      this.reveal(index, props);\r\n    }\r\n  };\r\n\r\n  reveal = (index, { mine, revealed, flagged, val }) => {\r\n    if (revealed || flagged) return;\r\n    if (mine) {\r\n      // Kaboom T_T\r\n      return this.boom(index);\r\n    }\r\n    if (val === 0) {\r\n      this.floodFill(index);\r\n    } else {\r\n      let copy = [...this.state.board];\r\n      copy[index].revealed = 1;\r\n      // Check if win\r\n      if (++this.progress === this.size - this.mines) {\r\n        copy.forEach(cell => {\r\n          cell.revealed = 1;\r\n        });\r\n        return this.setState(\r\n          {\r\n            board: copy,\r\n            status: '🎉 YOU WON 🎉',\r\n            started: 0\r\n          },\r\n          () => this.sendData()\r\n        );\r\n      }\r\n      this.setState({\r\n        board: copy\r\n      });\r\n    }\r\n  };\r\n\r\n  sendData = () => {\r\n    // Cheating should not be added to top :D\r\n    if (this.state.logged && !this.state.godMode) {\r\n      fetch(\r\n        `https://cryptic-harbor-11039.herokuapp.com/score?id=${\r\n          localStorage.id\r\n        }&name=${localStorage.name}&score=${this.state.time}&time=${new Date() *\r\n          1}&access_token=${localStorage.accessToken}`\r\n      );\r\n    }\r\n  };\r\n\r\n  floodFill = i => {\r\n    let board = [...this.state.board];\r\n    if (board[i].mine || board[i].revealed) return;\r\n    board[i].revealed = 1;\r\n    this.progress++;\r\n    this.setState({\r\n      board: board\r\n    });\r\n    const w = this.width,\r\n      size = this.size;\r\n    if (i >= w) {\r\n      // top left\r\n      if (i - w - 1 >= 0 && (i - w - 1) % w !== w - 1)\r\n        this.reveal(i - w - 1, board[i - w - 1]);\r\n      // top\r\n      this.reveal(i - w, board[i - w]);\r\n      // top right\r\n      if ((i - w + 1) % w !== 0) this.reveal(i - w + 1, board[i - w + 1]);\r\n    }\r\n    if (i < size - w) {\r\n      // btm left\r\n      if ((i + w - 1) % w !== w - 1) this.reveal(i + w - 1, board[i + w - 1]);\r\n      // btm\r\n      this.reveal(i + w, board[i + w]);\r\n      // btm right\r\n      if ((i + w + 1) % w !== 0) this.reveal(i + w + 1, board[i + w + 1]);\r\n    }\r\n    // left\r\n    if (i - 1 >= 0 && (i - 1) % w !== w - 1) this.reveal(i - 1, board[i - 1]);\r\n    // right\r\n    if (i + 1 < size && (i + 1) % w !== 0) this.reveal(i + 1, board[i + 1]);\r\n  };\r\n\r\n  rightClick = (index, props, e) => {\r\n    e.preventDefault();\r\n    // If first click then reveal instead of flagging.\r\n    if (!this.state.started) return this.handleClick(index, props, e);\r\n    // Only flag-able if not revealed.\r\n    if (this.state.board[index].revealed) return;\r\n    let copy = [...this.state.board];\r\n    copy[index].flagged = !copy[index].flagged;\r\n    this.setState({\r\n      board: copy\r\n    });\r\n  };\r\n\r\n  clockIn = () => {\r\n    let time = this.state.time.split(':');\r\n    let m = Number(time[0]);\r\n    let s = Number(time[1]) + 1;\r\n    s %= 60;\r\n    m += s === 0 ? 1 : 0;\r\n    s = s < 10 ? '0' + s : s;\r\n    m = m < 10 ? '0' + m : m;\r\n    this.setState({\r\n      time: m + ':' + s\r\n    });\r\n  };\r\n\r\n  cheat = () => {\r\n    if (!this.state.started)\r\n      return NotificationManager.info('Start the game first!', 'Uh oh!', 3000);\r\n    let copy = [...this.state.board];\r\n    this.state.minesLoc.forEach(mine => {\r\n      copy[mine].revealed = 1;\r\n    });\r\n    this.setState({\r\n      board: copy,\r\n      godMode: 1\r\n    });\r\n  };\r\n\r\n  renderBoard = () => {\r\n    return this.state.board.map((props, index) => {\r\n      return (\r\n        <Cell\r\n          key={index}\r\n          onClick={() => this.handleClick(index, props)}\r\n          onContextMenu={e => this.rightClick(index, props, e)}\r\n          cell={props}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const beautiful = { color: '#febd16' };\r\n    return (\r\n      <>\r\n        <NotificationContainer />\r\n        <Row className='text-center'>\r\n          <Col md={12}>\r\n            <h1 style={beautiful}>{this.state.status}</h1>\r\n          </Col>\r\n          <Col md={12}>\r\n            <Button variant='primary' onClick={this.newGame}>\r\n              New Game\r\n            </Button>{' '}\r\n            <Button\r\n              variant='danger'\r\n              onClick={this.cheat}\r\n              disabled={this.state.godMode}\r\n            >\r\n              {'Defuse Mines 👀'}\r\n            </Button>\r\n          </Col>\r\n          <Col md={12}>\r\n            <Timer\r\n              started={this.state.started}\r\n              time={this.state.time}\r\n              clockIn={this.clockIn}\r\n            />\r\n          </Col>\r\n          <Col md={12} className='game'>\r\n            {this.renderBoard()}\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\nimport { Nav, Button, NavbarBrand } from 'react-bootstrap';\r\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\r\n\r\nexport class Auth extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      logged: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!localStorage.expired) return;\r\n    const now = new Date() * 1;\r\n    if (now < parseInt(localStorage.expired)) {\r\n      this.setState({\r\n        logged: 1\r\n      });\r\n    } else {\r\n      localStorage.clear();\r\n    }\r\n  }\r\n\r\n  facebookResponse = res => {\r\n    // Successfully Logged In\r\n    if (res && res.name && res.accessToken) {\r\n      localStorage.name = res.name;\r\n      localStorage.expired = new Date() * 1 + res.expiresIn * 1000;\r\n      localStorage.id = res.id;\r\n      localStorage.accessToken = res.accessToken;\r\n      localStorage.logged = 1;\r\n      this.setState({\r\n        logged: 1\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return this.state.logged ? (\r\n      <NavbarBrand>{localStorage.name}</NavbarBrand>\r\n    ) : (\r\n      <Nav>\r\n        <FacebookLogin\r\n          appId='317151258877538'\r\n          autoLoad={false}\r\n          callback={this.facebookResponse}\r\n          render={renderProps => (\r\n            <Button variant='primary' size='sm' onClick={renderProps.onClick}>\r\n              Login with Facebook\r\n            </Button>\r\n          )}\r\n        />\r\n      </Nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React, { Component } from 'react';\r\nimport { Navbar, Nav } from 'react-bootstrap';\r\nimport Auth from './Auth.jsx';\r\n\r\nexport class NavBar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg='dark' variant='dark'>\r\n        <Navbar.Brand>\r\n          <img\r\n            alt=''\r\n            src='../logo.png'\r\n            width='30'\r\n            height='30'\r\n            className='d-inline-block align-top'\r\n          />\r\n          {' MineSweeper'}\r\n        </Navbar.Brand>\r\n        <Nav className='ml-auto'>\r\n          <Auth />\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nexport class TopPlayers extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      data: [],\r\n      gotTop: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://cryptic-harbor-11039.herokuapp.com/top5')\r\n      .then(e => e.json())\r\n      .then(e => {\r\n        this.setState({\r\n          data: e,\r\n          gotTop: 1\r\n        });\r\n      });\r\n  }\r\n  render() {\r\n    let top5 = null;\r\n    if (this.state.gotTop) {\r\n      top5 = this.state.data.map((data, index) => {\r\n        return (\r\n          <tr key={index}>\r\n            <td>{index + 1}</td>\r\n            <td>{data.name}</td>\r\n            <td>{data.score}</td>\r\n            <td>{moment(data.time).format('MMM Do YY')}</td>\r\n          </tr>\r\n        );\r\n      });\r\n    }\r\n    return (\r\n      <div>\r\n        <Table striped bordered style={{ color: 'white' }}>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Name</th>\r\n              <th>Score</th>\r\n              <th>Time</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{top5}</tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TopPlayers;\r\n","import React, { Component } from 'react';\nimport Board from './components/Board';\nimport NavBar from './components/NavBar';\nimport TopPlayers from './components/TopPlayers';\nimport { Container, Col, Row } from 'react-bootstrap';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <NavBar />\n        <Container style={{ height: '100vh' }}>\n          <Row className='h-100 align-items-center'>\n            <Col md={12}>\n              <Board height={8} width={8} mines={10} />\n            </Col>\n            <Col md={12}>\n              <TopPlayers />\n            </Col>\n          </Row>\n        </Container>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}