{"version":3,"sources":["components/Cell.jsx","components/Board.jsx","App.js","serviceWorker.js","index.js","logo.png"],"names":["Cell","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this$props$cell","props","cell","revealed","flagged","mine","val","_this$props","onClick","onContextMenu","className","boom","react_default","a","createElement","getValue","Component","Board","_this","call","newGame","progress","setState","board","initBoard","status","started","i","size","concat","toConsumableArray","addMines","cellIndex","j","m","mines","w","width","_loop","index","randomNumber","square","map","includes","addNeighbor","minesLocation","forEach","Math","floor","random","copy","state","handleClick","reveal","fillBoard","_ref","floodFill","rightClick","e","preventDefault","renderBoard","components_Cell","height","App","src","logo","alt","components_Board","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.6b716b55.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport class Cell extends Component {\r\n  getValue() {\r\n    const { revealed, flagged, mine, val } = this.props.cell;\r\n    if (!revealed) return flagged ? 'ðŸš©' : null;\r\n    if (mine) return 'ðŸ’£';\r\n    return val ? val : null;\r\n  }\r\n\r\n  render() {\r\n    const { cell, onClick, onContextMenu } = this.props;\r\n    const numClasses = [\r\n      ' one',\r\n      ' two',\r\n      ' three',\r\n      ' four',\r\n      ' five',\r\n      ' six',\r\n      ' seven',\r\n      ' eight'\r\n    ];\r\n    let className =\r\n      'cell' +\r\n      (cell.revealed ? ' revealed' : '') +\r\n      (cell.revealed && cell.val ? numClasses[cell.val - 1] : '') +\r\n      (cell.boom ? ' boom' : '');\r\n    return (\r\n      <div\r\n        onClick={onClick}\r\n        className={className}\r\n        onContextMenu={onContextMenu}\r\n      >\r\n        {this.getValue()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cell;\r\n","import React, { Component } from 'react';\r\nimport Cell from './Cell.jsx';\r\n\r\nexport class Board extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.progress = 0;\r\n    this.height = props.height;\r\n    this.width = props.width;\r\n    this.mines = props.mines;\r\n    this.size = props.height * props.width;\r\n    this.state = {\r\n      board: this.initBoard(),\r\n      status: 'Good luck!',\r\n      started: 0\r\n    };\r\n  }\r\n\r\n  fillBoard(index) {\r\n    let board = this.initBoard();\r\n    board = this.addNeighbor(...this.addMines(board, index));\r\n    return board;\r\n  }\r\n\r\n  newGame = () => {\r\n    this.progress = 0;\r\n    this.setState({\r\n      board: this.initBoard(),\r\n      status: 'Good luck!',\r\n      started: 0\r\n    });\r\n  };\r\n\r\n  // Fill board with nada\r\n  initBoard = () => {\r\n    let board = [];\r\n    for (let i = 0; i < this.size; i++) {\r\n      board = [...board, { mine: 0, revealed: 0, flagged: 0, val: 0, boom: 0 }];\r\n    }\r\n    return board;\r\n  };\r\n\r\n  // Fill board with mines\r\n  addMines = (board, cellIndex) => {\r\n    let i = 0,\r\n      j = [];\r\n    const m = this.mines,\r\n      w = this.width;\r\n    while (i < m) {\r\n      const index = this.randomNumber();\r\n      const square = [-(w + 1), -w, -(w - 1), -1, 0, 1, w - 1, w, w + 1].map(\r\n        val => index + val\r\n      );\r\n      // Because first click is always safe - make sure the square does not include first click's position\r\n      if (!board[index].mine && !square.includes(cellIndex)) {\r\n        board[index].mine = 1;\r\n        j = [...j, index];\r\n        i++;\r\n      }\r\n    }\r\n    return [board, j];\r\n  };\r\n\r\n  // Fill board with moves\r\n  // Original algorithm: traverse through board from first location to last location then add one for each bomb.\r\n  // New algorithm: map through each bomb and add one to neighbors\r\n  addNeighbor = (board, minesLocation) => {\r\n    const size = this.size;\r\n    const w = this.width;\r\n    minesLocation.forEach(i => {\r\n      // top neighbors\r\n      if (i >= w) {\r\n        // top left\r\n        if (\r\n          i - w - 1 >= 0 &&\r\n          (i - w - 1) % w !== w - 1 &&\r\n          !board[i - w - 1].mine\r\n        )\r\n          board[i - w - 1].val++;\r\n        // top\r\n        if (!board[i - w].mine) board[i - w].val++;\r\n        // top right\r\n        if ((i - w + 1) % w !== 0 && !board[i - w + 1].mine)\r\n          board[i - w + 1].val++;\r\n      }\r\n      // bottom neighbors\r\n      if (i < size - w) {\r\n        // btm left\r\n        if ((i + w - 1) % w !== w - 1 && !board[i + w - 1].mine)\r\n          board[i + w - 1].val++;\r\n        // btm\r\n        if (!board[i + w].mine) board[i + w].val++;\r\n        // btm right\r\n        if ((i + w + 1) % w !== 0 && !board[i + w + 1].mine)\r\n          board[i + w + 1].val++;\r\n      }\r\n      // left\r\n      if (i - 1 >= 0 && (i - 1) % w !== w - 1 && !board[i - 1].mine)\r\n        board[i - 1].val++;\r\n      // right\r\n      if (i + 1 < size && (i + 1) % w !== 0 && !board[i + 1].mine)\r\n        board[i + 1].val++;\r\n    });\r\n    return board;\r\n  };\r\n\r\n  randomNumber = () => Math.floor(Math.random() * this.size);\r\n\r\n  boom = index => {\r\n    let copy = [...this.state.board];\r\n    copy[index].boom = 1;\r\n    copy.forEach(cell => {\r\n      cell.revealed = 1;\r\n    });\r\n    this.setState({\r\n      board: copy,\r\n      status: 'ðŸ˜¢ You lost ðŸ˜¢'\r\n    });\r\n  };\r\n\r\n  handleClick = (index, props) => {\r\n    if (!this.state.started) {\r\n      this.setState(\r\n        {\r\n          started: 1,\r\n          board: this.fillBoard(index)\r\n        },\r\n        () => {\r\n          this.reveal(index, props);\r\n        }\r\n      );\r\n    } else {\r\n      this.reveal(index, props);\r\n    }\r\n  };\r\n\r\n  reveal = (index, { mine, revealed, flagged, val }) => {\r\n    if (revealed || flagged) return;\r\n    if (mine) {\r\n      // Kaboom T_T\r\n      return this.boom(index);\r\n    }\r\n    if (val === 0) {\r\n      this.floodFill(index);\r\n    } else {\r\n      let copy = [...this.state.board];\r\n      this.progress++;\r\n      copy[index].revealed = 1;\r\n      // Check if win\r\n      if (this.progress === this.size - this.mines) {\r\n        copy.forEach(cell => {\r\n          cell.revealed = 1;\r\n        });\r\n        return this.setState({\r\n          board: copy,\r\n          status: 'ðŸŽ‰ YOU WON ðŸŽ‰'\r\n        });\r\n      }\r\n      this.setState({\r\n        board: copy\r\n      });\r\n    }\r\n  };\r\n\r\n  floodFill = i => {\r\n    let board = [...this.state.board];\r\n    if (board[i].mine || board[i].revealed) return;\r\n    board[i].revealed = 1;\r\n    this.progress++;\r\n    this.setState({\r\n      board: board\r\n    });\r\n    const w = this.width,\r\n      size = this.size;\r\n    if (i >= w) {\r\n      // top left\r\n      if (i - w - 1 >= 0 && (i - w - 1) % w !== w - 1)\r\n        this.reveal(i - w - 1, board[i - w - 1]);\r\n      // top\r\n      this.reveal(i - w, board[i - w]);\r\n      // top right\r\n      if ((i - w + 1) % w !== 0) this.reveal(i - w + 1, board[i - w + 1]);\r\n    }\r\n    if (i < size - w) {\r\n      // btm left\r\n      if ((i + w - 1) % w !== w - 1) this.reveal(i + w - 1, board[i + w - 1]);\r\n      // btm\r\n      this.reveal(i + w, board[i + w]);\r\n      // btm right\r\n      if ((i + w + 1) % w !== 0) this.reveal(i + w + 1, board[i + w + 1]);\r\n    }\r\n    // left\r\n    if (i - 1 >= 0 && (i - 1) % w !== w - 1) this.reveal(i - 1, board[i - 1]);\r\n    // right\r\n    if (i + 1 < size && (i + 1) % w !== 0) this.reveal(i + 1, board[i + 1]);\r\n  };\r\n\r\n  rightClick = (index, props, e) => {\r\n    e.preventDefault();\r\n    // If first click then reveal instead of flagging.\r\n    if (!this.state.started) return this.handleClick(index, props, e);\r\n    // Only flag-able if not revealed.\r\n    if (this.state.board[index].revealed) return;\r\n    let copy = [...this.state.board];\r\n    copy[index].flagged = !copy[index].flagged;\r\n    this.setState({\r\n      board: copy\r\n    });\r\n  };\r\n\r\n  renderBoard = () => {\r\n    return this.state.board.map((props, index) => {\r\n      return (\r\n        <Cell\r\n          key={index}\r\n          onClick={() => this.handleClick(index, props)}\r\n          onContextMenu={e => this.rightClick(index, props, e)}\r\n          cell={props}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='game-header'>\r\n          {this.state.status}\r\n          <br />\r\n          <br />\r\n          <button className='btn btn-success' onClick={this.newGame}>\r\n            New Game\r\n          </button>\r\n          <br />\r\n        </div>\r\n        {this.renderBoard()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\nimport Board from './components/Board';\nimport './App.css';\nimport logo from './logo.png';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='game'>\n        <header className='App-header'>\n          <img src={logo} className='App-logo' alt='logo' />\n          <span>MineSweeper</span>\n        </header>\n        <Board height={8} width={8} mines={10} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.f5c252a1.png\";"],"sourceRoot":""}